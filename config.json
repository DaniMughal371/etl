{
    "source_db" : {
        "db_type" : "source",
        "db_vendor" : "oracle",
        "host" : "173.249.57.206",
        "port" : "1521",
        "database" : "rproods",
        "username" : "reportuser",
        "password" : "report"
    },
    "destination_db" : {
        "db_type" : "destination",
        "db_vendor" : "mssqlserver",
        "host" : "Daniyal",
        "port" : "1433",
        "database" : "etl",
        "username" : "sa",
        "password" : "root"
    },
    "extract" : {
        "tables" : [
            {   
                "table_name" : "invoice",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(SID) AS SID,TO_CHAR(BT_CUID) AS BT_CUID,TO_CHAR(STORE_SID) AS STORE_SID,TO_CHAR(SUBSIDIARY_SID) AS SBS_SID,TO_CHAR(CASHIER_SID) AS CASHIER_SID, TO_CHAR(REF_ORDER_SID) AS REF_ORDER_SID,TO_CHAR(REF_SALE_SID) AS REF_SALE_SID, DOC_NO,RECEIPT_TYPE,TRUNC(INVC_POST_DATE) AS INVC_POST_DATE,HAS_SALE,HAS_RETURN,UDF1_STRING,UDF2_STRING,UDF3_STRING,UDF4_STRING,UDF5_STRING,TOTAL_FEE_AMT,WORKSTATION_NO, WORKSTATION_NAME,POS_FLAG1,POS_FLAG2,POS_FLAG3,COMMENT1,COMMENT2,NOTES_GENERAL,USE_VAT,ROUNDING_OFFSET,NVL(SHIPPING_AMT,0) AS SHIPPING_AMT FROM RPS.DOCUMENT D WHERE D.DOC_NO > 0 AND D.ORDER_DOC_NO IS NULL AND D.STATUS = 4 AND D.IS_HELD <> 1 AND D.RECEIPT_TYPE IN (0,1)"
            },  
            {   "table_name" : "inventory",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(I.SID) AS SID,TO_CHAR(SBS_SID) AS SBS_SID,TO_CHAR(DCS_SID) AS DCS_SID,TO_CHAR(VEND_SID) AS VEND_SID,TO_CHAR(TAX_CODE_SID) AS TAX_CODE_SID, I.CREATED_DATETIME,ITEM_NO,ALU,DESCRIPTION1,DESCRIPTION2,DESCRIPTION3,DESCRIPTION4,ATTRIBUTE,ITEM_SIZE,UDF1_STRING,UDF2_STRING,UDF3_STRING,UDF4_STRING,UDF5_STRING, UDF6_STRING,UDF7_STRING,UDF8_STRING,UDF9_STRING,UDF10_STRING,UDF11_STRING,UDF12_STRING,UDF13_STRING,UDF14_STRING,UDF15_STRING, UPC,TEXT1,TEXT2,TEXT3,TEXT4,TEXT5,TEXT6,TEXT7,TEXT8,TEXT9,TEXT10,HEIGHT,LENGTH,WIDTH, NVL(I.COST,0) AS COST,NVL(I.FC_COST,0) AS FC_COST,NVL(VENDOR_LIST_COST,0) AS VENDOR_LIST_COST,NVL(USE_QTY_DECIMALS,0) AS USE_QTY_DECIMALS,ACTIVE, NVL(QTY_PER_CASE,1) AS QTY_PER_CASE,NVL(TRADE_DISC_PERC,0) AS TRADE_DISC_PERC FROM RPS.INVN_SBS_ITEM I LEFT JOIN RPS.INVN_SBS_EXTEND E ON I.SID = E.INVN_SBS_ITEM_SID"
            },
            {
                "table_name" : "customer",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(C.SBS_SID) AS SBS_SID,TO_CHAR(C.SID) AS SID,C.CREATED_DATETIME,C.CUST_ID,C.FIRST_NAME,C.LAST_NAME,C.GENDER,C.EMAIL,C.UDF1_STRING,C.UDF2_STRING,C.UDF3_STRING,C.UDF4_STRING,C.UDF5_STRING,CE.UDF6_STRING,CE.UDF7_STRING,CE.UDF8_STRING,CE.UDF9_STRING,CE.UDF10_STRING, CE.UDF11_STRING,CE.UDF12_STRING,CE.UDF13_STRING,CE.UDF14_STRING,CE.UDF15_STRING,CE.UDF16_STRING,CE.UDF17_STRING,CE.UDF18_STRING, C.INFO1,C.INFO2,C.SHARE_TYPE,C.ACTIVE FROM RPS.CUSTOMER C LEFT JOIN RPS.CUSTOMER_EXTEND CE ON C.SID = CE.CUST_SID"
            },
            {
                "table_name" : "customer_phone",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(CP.CUST_SID) AS CUST_SID,CP.PRIMARY_FLAG,CP.SEQ_NO,CP.EXTENSION,CP.PHONE_NO,CP.PHONE_ALLOW_CONTACT,C.CREATED_DATETIME FROM RPS.CUSTOMER C INNER JOIN RPS.CUSTOMER_PHONE CP ON C.SID = CP.CUST_SID"
            },
            {
                "table_name" : "customer_address",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(CA.CUST_SID) AS CUST_SID,CA.ADDRESS_NAME,CA.ADDRESS_1,CA.ADDRESS_2,CA.ADDRESS_3,CA.ADDRESS_4,CA.ADDRESS_5,CA.ADDRESS_6,CA.CITY,C.COUNTRY_NAME,CA.POSTAL_CODE,CA.ADDRESS_ALLOW_CONTACT,CA.PRIMARY_FLAG,CA.ACTIVE,CA.SEQ_NO,CC.CREATED_DATETIME FROM RPS.CUSTOMER CC INNER JOIN RPS.CUSTOMER_ADDRESS CA ON CC.SID = CA.CUST_SID LEFT JOIN RPS.COUNTRY C ON CA.COUNTRY_SID = C.SID"
            },
            {
                "table_name" : "customer_email",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(CE.CUST_SID) AS CUST_SID,CE.SEQ_NO,CE.EMAIL_ADDRESS,CE.EMAIL_ALLOW_CONTACT,CE.PRIMARY_FLAG,C.CREATED_DATETIME FROM RPS.CUSTOMER C INNER JOIN RPS.CUSTOMER_EMAIL CE ON C.SID = CE.CUST_SID"
            },
            {
                "table_name" : "dcs",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(SID) AS SID,TO_CHAR(SBS_SID) AS SBS_SID,DCS_CODE,ACTIVE,D_NAME,C_NAME,S_NAME FROM RPS.DCS"
            },
            {
                "table_name" : "inventory_qty",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(IQ.SBS_SID) AS SBS_SID,TO_CHAR(IQ.INVN_SBS_ITEM_SID) AS ITEM_SID,TO_CHAR(IQ.STORE_SID) AS STORE_SID,NVL(IQ.QTY,0) AS QTY FROM RPS.INVN_SBS_ITEM_QTY IQ"
            },
            {
                "table_name" : "inventory_price",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(IP.SBS_SID) AS SBS_SID,TO_CHAR(IP.INVN_SBS_ITEM_SID) AS ITEM_SID,TO_CHAR(IP.PRICE_LVL_SID) AS PRICE_LVL_SID,NVL(IP.PRICE,0) as PRICE FROM RPS.INVN_SBS_PRICE IP"
            },
            {
                "table_name" : "invoice_items",
                "incremental" : 0,
                "query" : "SELECT D.INVC_POST_DATE,TO_CHAR(D.SUBSIDIARY_SID) AS SBS_SID,TO_CHAR(D.SID) AS DOC_SID,TO_CHAR(DI.INVN_SBS_ITEM_SID) AS ITEM_SID, DI.ITEM_TYPE,DI.ORIG_PRICE,DI.PRICE,DI.TAX_PERC,DI.TAX_AMT,DI.TAX2_PERC,DI.TAX2_AMT,DI.COST, SUM(CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) AS SOLD_QTY, SUM(CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY*DI.COST WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY*DI.COST END) AS EXT_COST, SUM(CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY*DI.TAX_AMT WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY*DI.TAX_AMT END) AS EXT_TAX, SUM(CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY*DI.TAX2_AMT WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY*DI.TAX2_AMT END) AS EXT_TAX2, SUM(     DECODE(D.USE_VAT,1,DI.ORIG_PRICE-NVL(DI.ORIG_TAX_AMT,0),DI.ORIG_PRICE)*     (CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) ) AS GROSS_SALE, SUM(     DECODE(D.USE_VAT,1,DI.ORIG_PRICE,DI.ORIG_PRICE+NVL(DI.ORIG_TAX_AMT,0))*     (CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) ) AS GROSS_SALE_WT, SUM(     DECODE(D.USE_VAT,1,DI.PRICE-NVL(DI.TAX_AMT,0)-NVL(DI.TAX2_AMT,0),DI.PRICE)*     (CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) ) AS NET_SALE, SUM(     (DECODE(D.USE_VAT,1,DI.PRICE-NVL(DI.TAX_AMT,0)-NVL(DI.TAX2_AMT,0),DI.PRICE)*(1-NVL(D.DISC_PERC,0)/100))*     (CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) ) AS NET_SALE_WGD, SUM(     DECODE(D.USE_VAT,1,DI.PRICE,DI.PRICE+NVL(DI.TAX_AMT,0)+NVL(DI.TAX2_AMT,0))*     (CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) ) AS NET_SALE_WT, SUM(     (DECODE(D.USE_VAT,1,DI.PRICE,DI.PRICE+NVL(DI.TAX_AMT,0)+NVL(DI.TAX2_AMT,0))*(1-NVL(D.DISC_PERC,0)/100))*     (CASE WHEN DI.ITEM_TYPE = 2 THEN -DI.QTY WHEN DI.ITEM_TYPE = 3 THEN 0 ELSE DI.QTY END) ) AS NET_SALE_WT_WGD FROM RPS.DOCUMENT D INNER JOIN RPS.DOCUMENT_ITEM DI ON D.SID = DI.DOC_SID WHERE D.DOC_NO > 0 AND D.ORDER_DOC_NO IS NULL AND D.STATUS = 4 AND D.IS_HELD <> 1 AND D.RECEIPT_TYPE IN (0,1) AND DI.KIT_FLAG NOT IN (2,3) GROUP BY D.SUBSIDIARY_SID,D.SID,DI.INVN_SBS_ITEM_SID,DI.ITEM_TYPE,DI.ORIG_PRICE,DI.PRICE,DI.TAX_PERC,DI.TAX_AMT,DI.TAX2_PERC,DI.TAX2_AMT,DI.COST,D.INVC_POST_DATE"
            },
            {
                "table_name" : "voucher",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(V.SID) AS SID,TO_CHAR(V.SBS_SID) AS SBS_SID,TO_CHAR(V.STORE_SID) AS STORE_SID,TO_CHAR(V.PO_SID) AS PO_SID,TO_CHAR(V.TO_SID) AS TO_SID, TRUNC(CREATED_DATETIME) AS CREATED_DATETIME,TRUNC(ARRIVED_DATE) AS ARRIVED_DATE,TO_CHAR(V.REF_VOU_SID) AS REF_VOU_SID, V.VOU_NO,V.VOU_TYPE,V.USE_VAT,V.SLIP_FLAG FROM RPS.VOUCHER V  WHERE 1=1 AND V.VOU_TYPE IN (0,1) AND V.HELD <> 1 AND V.VOU_NO > 0 AND V.ACTIVE = 1 AND V.VOU_CLASS = 0"
            },
            {
                "table_name" : "voucher_items",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(VI.VOU_SID) AS VOU_SID,TO_CHAR(VI.ITEM_SID) AS ITEM_SID, VI.ITEM_POS,VI.SERIAL_NO,VI.LOT_NUMBER, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0) AS QTY,NVL(VI.PRICE,0) AS PRICE,NVL(VI.COST,0) AS COST,NVL(VI.FC_COST,0) AS FC_COST,NVL(VI.TAX_PERC,0) AS TAX_PERC, NVL(VI.TAX_PERC2,0) AS TAX_PERC2, DECODE(V.USE_VAT,1,     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0)))),     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100)) ) AS TAX_AMT, DECODE(V.USE_VAT,1,     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100)) ) AS TAX_AMT2, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*NVL(VI.COST,0) AS EXT_COST, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)* DECODE(V.USE_VAT,1,     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0)))),     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100)) ) AS EXT_TAX_AMT, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)* DECODE(V.USE_VAT,1,     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),     (NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100)) ) AS EXT_TAX_AMT2, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)* DECODE(V.USE_VAT,1,     NVL(VI.PRICE,0)-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0))))-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),     NVL(VI.PRICE,0) ) AS EXT_PRICE, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)* DECODE(V.USE_VAT,1,     NVL(VI.PRICE,0),     NVL(VI.PRICE,0)+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100))+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100)) ) AS EXT_PRICE_WT, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)* DECODE(V.USE_VAT,1,     NVL(VI.PRICE,0)-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0))))-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),     NVL(VI.PRICE,0) )*(1-NVL(V.DISC_PERC,0)/100) AS EXT_PRICE_WGD, NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)* DECODE(V.USE_VAT,1,     NVL(VI.PRICE,0),     NVL(VI.PRICE,0)+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100))+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100)) )*(1-NVL(V.DISC_PERC,0)/100) AS EXT_PRICE_WT_WGD FROM RPS.VOUCHER V  INNER JOIN RPS.VOU_ITEM VI ON V.SID = VI.VOU_SID WHERE 1=1 AND V.VOU_TYPE IN (0,1) AND V.HELD <> 1 AND V.VOU_NO > 0 AND V.ACTIVE = 1 AND V.VOU_CLASS = 0"
            },
            {
                "table_name" : "slip",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(S.SID) AS SLIP_SID,S.POST_DATE,TO_CHAR(S.OUT_SBS_SID) AS OUT_SBS_SID,TO_CHAR(S.OUT_STORE_SID) AS OUT_STORE_SID,TO_CHAR(S.IN_SBS_SID) AS IN_SBS_SID,TO_CHAR(S.IN_STORE_SID) AS IN_STORE_SID,TO_CHAR(S.REF_SLIP_SID) AS REF_SLIP_SID,TO_CHAR(S.TO_SID) AS TO_SID,S.SLIP_NO,S.USE_VAT,S.TRACKING_NO,S.SHIPMENT_NO,S.DAYS_IN_TRAN,nvl(S.VERIFIED,0) as VERIFIED,nvl(S.UNVERIFIED,0) as UNVERIFIED,nvl(S.ARCHIVED,0) as ARCHIVED,S.NOTE,nvl(S.REVERSED_FLAG,0) as REVERSED_FLAG FROM RPS.SLIP S WHERE 1=1 AND S.HELD <> 1 AND S.SLIP_NO > 0 GROUP BY S.SID,S.POST_DATE,S.OUT_SBS_SID,S.OUT_STORE_SID,S.IN_SBS_SID,S.IN_STORE_SID,S.REF_SLIP_SID,S.TO_SID,S.SLIP_NO,S.USE_VAT,S.TRACKING_NO,S.SHIPMENT_NO,S.DAYS_IN_TRAN,S.VERIFIED,S.UNVERIFIED,S.ARCHIVED,S.NOTE,S.REVERSED_FLAG"
            },
            {
                "table_name" : "slip_items",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(SI.SLIP_SID) AS SLIP_SID,TO_CHAR(ITEM_SID) AS ITEM_SID,DECODE(NVL(S.REVERSED_FLAG,0),2,-SI.QTY,SI.QTY) AS QTY,SI.PRICE,NVL(SI.COST,0) AS COST, NVL(SI.TAX_PERC,0) AS TAX_PERC,DECODE(S.USE_VAT,1,SI.PRICE*(NVL(SI.TAX_PERC,0)/(100+NVL(SI.TAX_PERC,0))),SI.PRICE*(NVL(SI.TAX_PERC,0)/100)) AS TAX_AMT, DECODE(S.USE_VAT,1,SI.PRICE*(NVL(SI.TAX_PERC,0)/(100+NVL(SI.TAX_PERC,0))),SI.PRICE*(NVL(SI.TAX_PERC,0)/100))*DECODE(NVL(S.REVERSED_FLAG,0),2,-SI.QTY,SI.QTY) AS EXT_TAX_AMT, NVL(SI.TAX_PERC2,0) AS TAX_PERC2,DECODE(S.USE_VAT,1,SI.PRICE*(NVL(SI.TAX_PERC2,0)/(100+NVL(SI.TAX_PERC2,0))),SI.PRICE*(NVL(SI.TAX_PERC2,0)/100)) AS TAX_AMT2, DECODE(S.USE_VAT,1,SI.PRICE*(NVL(SI.TAX_PERC2,0)/(100+NVL(SI.TAX_PERC2,0))),SI.PRICE*(NVL(SI.TAX_PERC2,0)/100))*DECODE(NVL(S.REVERSED_FLAG,0),2,-SI.QTY,SI.QTY) AS EXT_TAX_AMT2, SI.SERIAL_NO,SI.LOT_NUMBER, NVL(SI.COST,0)*DECODE(NVL(S.REVERSED_FLAG,0),2,-SI.QTY,SI.QTY) AS EXT_COST, DECODE(S.USE_VAT,1,SI.PRICE-(SI.PRICE*(NVL(SI.TAX_PERC,0)/(100+NVL(SI.TAX_PERC,0))))-(SI.PRICE*(NVL(SI.TAX_PERC2,0)/(100+NVL(SI.TAX_PERC2,0)))),SI.PRICE)* DECODE(NVL(S.REVERSED_FLAG,0),2,-SI.QTY,SI.QTY) AS EXT_PRICE, DECODE(S.USE_VAT,1,SI.PRICE,SI.PRICE+(SI.PRICE*(NVL(SI.TAX_PERC,0)/100))+(SI.PRICE*(NVL(SI.TAX_PERC2,0)/100)))* DECODE(NVL(S.REVERSED_FLAG,0),2,-SI.QTY,SI.QTY) AS EXT_PRICE_WT FROM RPS.SLIP S  INNER JOIN RPS.SLIP_ITEM SI ON S.SID = SI.SLIP_SID WHERE 1=1 AND S.HELD <> 1 AND S.SLIP_NO > 0"
            },
            {
                "table_name" : "company",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(S.SID) AS SID,SBS_NO,SBS_NAME FROM RPS.SUBSIDIARY S"
            },
            {
                "table_name" : "vendor",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(SID) AS SID,TO_CHAR(SBS_SID) AS SBS_SID,VEND_ID,VEND_CODE,ACTIVE,VEND_NAME,INFO1,INFO2,NVL(TRADE_DISC_PERC,0) AS TRADE_DISC_PERC FROM RPS.VENDOR"
            },
            {
                "table_name" : "store",
                "incremental" : 0,
                "query" : "select to_char(s.sbs_sid) as sbs_Sid,to_char(s.sid) as sid,to_char(s.active_price_lvl_sid) as price_lvl_sid, s.store_no,s.store_code,s.store_name,active,activation_date,s.address1,s.address2,s.address3,s.address4,s.address5,s.address6,s.zip,s.phone1,s.phone2, s.udf1_string,s.udf2_string,s.udf3_string,s.udf4_string,s.udf5_string from rps.store s"
            },
            {
                "table_name" : "price_level",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(SBS_SID) AS SBS_SID,TO_CHAR(SID) AS SID,PRICE_LVL,PRICE_LVL_NAME,ACTIVE FROM RPS.PRICE_LEVEL PL"
            },
            {
                "table_name" : "asn",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(V.SID) AS SID,TO_CHAR(V.SBS_SID) AS SBS_SID,TO_CHAR(V.STORE_SID) AS STORE_SID,TO_CHAR(V.PO_SID) AS PO_SID,TO_CHAR(V.TO_SID) AS TO_SID, TRUNC(CREATED_DATETIME) AS CREATED_DATETIME,TRUNC(ARRIVED_DATE) AS ARRIVED_DATE,TO_CHAR(V.REF_VOU_SID) AS REF_VOU_SID, V.VOU_NO,V.VOU_TYPE,V.USE_VAT,V.SLIP_FLAG FROM RPS.VOUCHER V  WHERE 1=1 AND V.VOU_TYPE IN (0,1) AND V.HELD <> 1 AND V.VOU_NO > 0 AND V.ACTIVE = 1 AND V.VOU_CLASS = 2"
            },
            {
                "table_name" : "asn_items",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(VI.VOU_SID) AS VOU_SID,TO_CHAR(VI.ITEM_SID) AS ITEM_SID,VI.ITEM_POS,VI.SERIAL_NO,VI.LOT_NUMBER,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0) AS QTY,NVL(VI.PRICE,0) AS PRICE,NVL(VI.COST,0) AS COST,NVL(VI.FC_COST,0) AS FC_COST,NVL(VI.TAX_PERC,0) AS TAX_PERC,NVL(VI.TAX_PERC2,0) AS TAX_PERC2,DECODE(V.USE_VAT,1,(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0)))),(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100))) AS TAX_AMT,DECODE(V.USE_VAT,1,(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100))) AS TAX_AMT2,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*NVL(VI.COST,0) AS EXT_COST,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*DECODE(V.USE_VAT,1,(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0)))),(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100))) AS EXT_TAX_AMT,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*DECODE(V.USE_VAT,1,(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100))) AS EXT_TAX_AMT2,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*DECODE(V.USE_VAT,1,NVL(VI.PRICE,0)-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0))))-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),NVL(VI.PRICE,0)) AS EXT_PRICE,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*DECODE(V.USE_VAT,1,NVL(VI.PRICE,0),NVL(VI.PRICE,0)+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100))+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100))) AS EXT_PRICE_WT,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*DECODE(V.USE_VAT,1,NVL(VI.PRICE,0)-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/(100+NVL(VI.TAX_PERC,0))))-(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/(100+NVL(VI.TAX_PERC2,0)))),NVL(VI.PRICE,0))*(1-NVL(V.DISC_PERC,0)/100) AS EXT_PRICE_WGD,NVL(CASE WHEN VOU_TYPE =1 THEN QTY*-1 ELSE QTY END,0)*DECODE(V.USE_VAT,1,NVL(VI.PRICE,0),NVL(VI.PRICE,0)+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC,0)/100))+(NVL(VI.PRICE,0)*(NVL(VI.TAX_PERC2,0)/100)))*(1-NVL(V.DISC_PERC,0)/100) AS EXT_PRICE_WT_WGD FROM RPS.VOUCHER V INNER JOIN RPS.VOU_ITEM VI ON V.SID = VI.VOU_SID WHERE 1=1 AND V.VOU_TYPE IN (0,1) AND V.HELD <> 1 AND V.VOU_NO > 0 AND V.ACTIVE = 1 AND V.VOU_CLASS = 2"
            },
            {
                "table_name" : "po",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(P.SBS_SID) AS SBS_SID,TO_CHAR(P.STORE_SID) AS STORE_SID,TO_CHAR(P.SID) AS SID,TO_CHAR(P.SO_SID) AS SO_SID,TO_CHAR(P.REF_PO_SID) AS REF_PO_SID, P.PO_NO,P.PO_TYPE,TO_CHAR(P.VENDOR_SID) AS VEND_SID,NVL(P.DISC_AMT,0) AS DISC_AMT,NVL(P.DISC_PERC,0) AS DISC_PERC,P.STATUS,P.FROM_SO,P.USE_VAT,P.VERIFIED,P.UNVERIFIED, P.CREATED_DATETIME,P.SHIPPING_DATE,P.CMS_POST_DATE FROM RPS.PO P WHERE 1=1 AND P.HELD <> 1 AND P.ACTIVE = 1 AND P.PO_NO IS NOT NULL AND P.CANCEL_DATE IS NULL"
            },
            {
                "table_name" : "po_items",
                "incremental" : 0,
                "query" : "SELECT TO_CHAR(PI.PO_SID) AS PO_SID,TO_CHAR(PI.ITEM_SID) AS ITEM_SID, PI.ITEM_POS,PI.CREATED_DATETIME,PI.PRICE,PI.COST,PI.FC_COST,PI.TAX_PERC,PI.TAX_PERC2,PI.ORD_QTY FROM RPS.PO_ITEM PI"
            }
        ]
    }
}